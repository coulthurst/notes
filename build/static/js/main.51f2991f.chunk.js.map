{"version":3,"sources":["fire.js","components/NavBar/NavBar.js","components/Note/Note.js","components/NoteList/NoteList.js","components/NoteEditor/NoteEditor.js","components/App.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Nav","console","log","document","querySelector","classList","toggle","react_default","a","createElement","mdbreact","dark","onClick","this","toggleSideNav","left","right","style","color","className","icon","href","id","React","Component","Note","_ref","note","onNoteSelect","cursor","title","lastEdited","NoteList","notes","renderedList","map","components_Note_Note","key","NoteEditor","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onTitleInputChange","e","onUpdateNoteTitle","target","value","onHandleChange","body","onNoteSave","onNoteDelete","onAddNote","bind","assertThisInitialized","onChange","onBlur","type","width","backgroundColor","border","float","lib_default","App","state","selectedNote","location","date","tags","getNoteData","_callee","firebaseRef","firebaseArr","regenerator_default","wrap","_context","prev","next","once","then","snapshot","val","sent","keys","setState","stop","text","newNote","objectSpread","onUpdateNoteBody","newNoteKey","database","ref","child","push","dateObj","Date","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear","dateCreated","concat","toConsumableArray","set","newNoteList","i","length","remove","NavBar","fluid","size","components_NoteList_NoteList","components_NoteEditor_NoteEditor","ReactDOM","render","components_App"],"mappings":"sSAWeA,SADJC,EAASC,cARP,CACXC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,iBCwCNC,0LAnCXC,QAAQC,IAAI,QACZC,SAASC,cAAc,YAAYC,UAAUC,OAAO,yCAIpD,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,MAAI,GACVJ,EAAAC,EAAAC,cAACC,EAAA,cAAD,CAAeE,QAASC,KAAKC,gBAC7BP,EAAAC,EAAAC,cAACC,EAAA,UAAD,CAAWK,MAAI,IACfR,EAAAC,EAAAC,cAACC,EAAA,UAAD,CAAWM,OAAK,GACdT,EAAAC,EAAAC,cAACC,EAAA,YAAD,KACEH,EAAAC,EAAAC,cAAA,UAAQQ,MAAO,CAAEC,MAAO,YAAxB,YAINX,EAAAC,EAAAC,cAAA,OAAKU,UAAU,WACbZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,mBACbZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,WACbZ,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASU,KAAK,cAAcD,UAAU,WAExCZ,EAAAC,EAAAC,cAACC,EAAA,aAAD,CAAcS,UAAU,sBACtBZ,EAAAC,EAAAC,cAACC,EAAA,OAAD,KACEH,EAAAC,EAAAC,cAAA,KAAGY,KAAK,IAAIC,GAAG,gBAAf,mCAzBEC,IAAMC,WCMTC,EAdF,SAAAC,GAA4B,IAAzBC,EAAyBD,EAAzBC,KAAMC,EAAmBF,EAAnBE,aACpB,OACErB,EAAAC,EAAAC,cAACC,EAAA,iBAAD,CACEE,QAAS,kBAAMgB,EAAaD,IAC5BV,MAAO,CAAEY,OAAQ,YAEjBtB,EAAAC,EAAAC,cAAA,OAAKU,UAAU,wCACbZ,EAAAC,EAAAC,cAAA,MAAIU,UAAU,QAAQQ,EAAKG,QAE7BvB,EAAAC,EAAAC,cAAA,KAAGU,UAAU,QAAb,gBAAkCQ,EAAKI,cCQ9BC,EAhBE,SAAAN,GAA6B,IAA1BO,EAA0BP,EAA1BO,MAAOL,EAAmBF,EAAnBE,aACnBM,EAAeD,EAAME,IAAI,SAAAR,GAC7B,OAAOpB,EAAAC,EAAAC,cAAC2B,EAAD,CAAMC,IAAKV,EAAKL,GAAIK,KAAMA,EAAMC,aAAcA,MAGvD,OACErB,EAAAC,EAAAC,cAAA,OAAKU,UAAU,aACbZ,EAAAC,EAAAC,cAACC,EAAA,QAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,YAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,aAAD,KAAewB,iCCsFVI,cAtFb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA5B,KAAAyB,IACjBE,EAAAC,OAAAE,EAAA,EAAAF,CAAA5B,KAAA4B,OAAAG,EAAA,EAAAH,CAAAH,GAAAO,KAAAhC,KAAM0B,KAIRO,mBAAqB,SAAAC,GACnBP,EAAKD,MAAMS,kBAAkBD,EAAEE,OAAOC,QANrBV,EAQnBW,eAAiB,SAAAD,GACfV,EAAKD,MAAMZ,KAAKyB,KAAOF,GATNV,EAWnBa,WAAa,WACXb,EAAKD,MAAMc,WAAWb,EAAKD,MAAMZ,OAZhBa,EAcnBc,aAAe,WACbd,EAAKD,MAAMe,aAAad,EAAKD,MAAMZ,OAflBa,EAiBnBe,UAAY,WACVf,EAAKD,MAAMgB,aAhBXf,EAAKW,eAAiBX,EAAKW,eAAeK,KAApBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAD,KAFLA,wEAqBjB,OACEjC,EAAAC,EAAAC,cAAA,OAAKU,UAAU,eACbZ,EAAAC,EAAAC,cAACC,EAAA,QAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,cAAD,CAAeS,UAAU,cACvBZ,EAAAC,EAAAC,cAAA,SACEyC,MAAOrC,KAAK0B,MAAMZ,KAAKG,MACvB4B,SAAU7C,KAAKiC,mBACfa,OAAQ9C,KAAKwC,WACbO,KAAK,OACL3C,MAAO,CACL4C,MAAO,OACPC,gBAAiB,cACjB5C,MAAO,OACP6C,OAAQ,UAGZxD,EAAAC,EAAAC,cAACC,EAAA,QAAD,CACEU,KAAK,UACLD,UAAU,QACVF,MAAO,CAAE+C,MAAO,SAChBpD,QAASC,KAAKyC,eAQhB/C,EAAAC,EAAAC,cAACC,EAAA,QAAD,CACEU,KAAK,OACLD,UAAU,QACVF,MAAO,CAAE+C,MAAO,SAChBpD,QAASC,KAAKwC,cAGlB9C,EAAAC,EAAAC,cAACC,EAAA,YAAD,CAAaS,UAAU,aACrBZ,EAAAC,EAAAC,cAACC,EAAA,YAAD,KACEH,EAAAC,EAAAC,cAACwD,EAAAzD,EAAD,CACE0C,MAAOrC,KAAK0B,MAAMZ,KAAKyB,KACvBM,SAAU7C,KAAKsC,oBAiBvB5C,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQY,GAAG,WAAWV,QAASC,KAAK0C,WAClChD,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASU,KAAK,SADhB,gCA9EiBI,aCmJV0C,6MArJbC,MAAQ,CACNC,aAAc,CACZ9C,GAAI,KACJQ,MAAO,GACPsB,KAAM,GACNiB,SAAU,KACVC,KAAM,KACNC,KAAM,MAERtC,MAAO,MAQTuC,kDAAc,SAAAC,EAAMC,GAAN,IAAAnF,EAAAoF,EAAA,OAAAC,EAAApE,EAAAqE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACON,EAAYO,KAAK,SAASC,KAAK,SAASC,GACzD,OAAOA,EAASC,QAFN,OAKA,OAJN7F,EADMuF,EAAAO,OAMJV,EAAclC,OAAO6C,KAAK/F,GAAM4C,IAAI,SAAAE,GACxC,OAAO9C,EAAK8C,KAGdG,EAAK+C,SAAS,CAAEtD,MAAO0C,EAAaP,aAAcO,EAAY,MAE9DnC,EAAKe,YAZK,wBAAAuB,EAAAU,SAAAf,EAAA5D,iEAgBde,aAAe,SAAAD,GACba,EAAK+C,SAAS,CAAEnB,aAAczC,OAGhCqB,kBAAoB,SAAAyC,GAClB,IAAIC,EAAOjD,OAAAkD,EAAA,EAAAlD,CAAA,GAAQD,EAAK2B,MAAMC,cAC9BsB,EAAQ5D,MAAQ2D,EAChBjD,EAAK+C,SAAS,CAAEnB,aAAcsB,OAGhCE,iBAAmB,SAAAH,GACjB,IAAIC,EAAOjD,OAAAkD,EAAA,EAAAlD,CAAA,GAAQD,EAAK2B,MAAMC,cAC9BsB,EAAQtC,KAAOqC,EACfjD,EAAK+C,SAAS,CAAEnB,aAAcsB,OAGhCnC,UAAY,WACV,IAAIsC,EAAarG,EACdsG,WACAC,MACAC,MAAM,SACNC,OAAO5D,IACN6D,EAAU,IAAIC,KACdC,EAAQF,EAAQG,cAAgB,EAChCC,EAAMJ,EAAQK,aACdC,EAAON,EAAQO,iBAEb9E,EAAO,CACXL,GAAIuE,EACJ/D,MAAO,WACPsB,KAAM,GACNsD,YAAW,GAAAC,OAAKP,EAAL,KAAAO,OAAcL,EAAd,KAAAK,OAAqBH,GAChCzE,WAAU,GAAA4E,OAAKP,EAAL,KAAAO,OAAcL,EAAd,KAAAK,OAAqBH,IAGjChE,EAAK+C,SAAS,CACZnB,aAAczC,EACdM,MAAK,GAAA0E,OAAAlE,OAAAmE,EAAA,EAAAnE,CAAMD,EAAK2B,MAAMlC,OAAjB,CAAwBN,MAG/BnC,EACGsG,WACAC,MACAC,MAAM,SAAWH,GACjBgB,IAAIlF,MAGT0B,WAAa,SAAA1B,GAEX,IAAIuE,EAAU,IAAIC,KACdC,EAAQF,EAAQG,cAAgB,EAChCC,EAAMJ,EAAQK,aACdC,EAAON,EAAQO,iBAEnB9E,EAAKI,WAAL,GAAA4E,OAAqBP,EAArB,KAAAO,OAA8BL,EAA9B,KAAAK,OAAqCH,GAIrC,IAHA,IAAIlF,EAAKkB,EAAK2B,MAAMC,aAAa9C,GAC7BwF,EAActE,EAAK2B,MAAMlC,MAEpB8E,EAAI,EAAGA,EAAID,EAAYE,OAAQD,IAClCpF,EAAKL,KAAOwF,EAAYC,GAAGzF,KAC7BwF,EAAYC,GAAKpF,EACjBa,EAAK+C,SAAS,CAAEtD,MAAO6E,KAI3BtH,EACGsG,WACAC,MACAC,MAAM,SAAW1E,GACjBuF,IAAIlF,MAGT2B,aAAe,SAAA3B,GACbnC,EACGsG,WACAC,MACAC,MAAM,SAAWrE,EAAKL,IACtB2F,SAEHzE,EAAKgC,YAAYhF,EAASsG,WAAWC,IAAI,+FAnGzC,IAAMrB,EAAclF,EAASsG,WAAWC,IAAI,SAC5ClF,KAAK2D,YAAYE,oCAsGjB,OACEnE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyG,EAAD,OAEF3G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,aAAD,CAAcyG,OAAK,GACjB5G,EAAAC,EAAAC,cAACC,EAAA,OAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQ0G,KAAK,IAAIjG,UAAU,QACzBZ,EAAAC,EAAAC,cAAC4G,EAAD,CACEpF,MAAOpB,KAAKsD,MAAMlC,MAClBL,aAAcf,KAAKe,gBAIvBrB,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQ0G,KAAK,KACX7G,EAAAC,EAAAC,cAAC6G,EAAD,CACE3F,KAAMd,KAAKsD,MAAMC,aACjBpB,kBAAmBnC,KAAKmC,kBACxB4C,iBAAkB/E,KAAK+E,iBACvBvC,WAAYxC,KAAKwC,WACjBC,aAAczC,KAAKyC,aACnBC,UAAW1C,KAAK0C,wBA3IhB/B,aCFlB+F,IAASC,OAAOjH,EAAAC,EAAAC,cAACgH,EAAD,MAAStH,SAASC,cAAc","file":"static/js/main.51f2991f.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nvar config = {\r\n  apiKey: \"AIzaSyAOfLcV7R56O50bTUvvtLlymu2SAqEXnxk\",\r\n  authDomain: \"notes-ecb64.firebaseapp.com\",\r\n  databaseURL: \"https://notes-ecb64.firebaseio.com\",\r\n  projectId: \"notes-ecb64\",\r\n  storageBucket: \"notes-ecb64.appspot.com\",\r\n  messagingSenderId: \"706938772405\"\r\n};\r\nvar fire = firebase.initializeApp(config);\r\nexport default fire;\r\n","import React from \"react\";\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarNav,\r\n  NavbarToggler,\r\n  MDBIcon,\r\n  MDBContainer,\r\n  MDBRow\r\n} from \"mdbreact\";\r\n\r\nclass Nav extends React.Component {\r\n  toggleSideNav() {\r\n    console.log(\"asdf\");\r\n    document.querySelector(\".sideNav\").classList.toggle(\"open\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar dark>\r\n          <NavbarToggler onClick={this.toggleSideNav} />\r\n          <NavbarNav left />\r\n          <NavbarNav right>\r\n            <NavbarBrand>\r\n              <strong style={{ color: \"#2ecc71\" }}>NOTES</strong>\r\n            </NavbarBrand>\r\n          </NavbarNav>\r\n        </Navbar>\r\n        <div className=\"sideNav\">\r\n          <div className=\"sideNav--banner\">\r\n            <div className=\"icon-bg\">\r\n              <MDBIcon icon=\"user-circle\" className=\"fa-5x\" />\r\n            </div>\r\n            <MDBContainer className=\"sideNav--container\">\r\n              <MDBRow>\r\n                <a href=\"#\" id=\"btn--sign-in\">\r\n                  Sign in with Google\r\n                </a>\r\n              </MDBRow>\r\n            </MDBContainer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport { MDBListGroupItem } from \"mdbreact\";\r\n\r\nconst Note = ({ note, onNoteSelect }) => {\r\n  return (\r\n    <MDBListGroupItem\r\n      onClick={() => onNoteSelect(note)}\r\n      style={{ cursor: \"pointer\" }}\r\n    >\r\n      <div className=\"d-flex w-100 justify-content-between\">\r\n        <h3 className=\"mb-1\">{note.title}</h3>\r\n      </div>\r\n      <p className=\"mb-1\">Last edited: {note.lastEdited}</p>\r\n    </MDBListGroupItem>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React from \"react\";\r\nimport { MDBContainer, MDBListGroup, MDBCard, MDBCardBody } from \"mdbreact\";\r\nimport Note from \"../Note/Note\";\r\n\r\nconst NoteList = ({ notes, onNoteSelect }) => {\r\n  const renderedList = notes.map(note => {\r\n    return <Note key={note.id} note={note} onNoteSelect={onNoteSelect} />;\r\n  });\r\n\r\n  return (\r\n    <div className=\"note-list\">\r\n      <MDBCard>\r\n        <MDBCardBody>\r\n          <MDBListGroup>{renderedList}</MDBListGroup>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteList;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBCardBody,\r\n  MDBCardHeader,\r\n  MDBBtn,\r\n  MDBIcon\r\n} from \"mdbreact\";\r\nimport ReactQuill, { Quill, Mixin, Toolbar } from \"react-quill\";\r\n\r\nclass NoteEditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onHandleChange = this.onHandleChange.bind(this);\r\n  }\r\n\r\n  onTitleInputChange = e => {\r\n    this.props.onUpdateNoteTitle(e.target.value);\r\n  };\r\n  onHandleChange = value => {\r\n    this.props.note.body = value;\r\n  };\r\n  onNoteSave = () => {\r\n    this.props.onNoteSave(this.props.note);\r\n  };\r\n  onNoteDelete = () => {\r\n    this.props.onNoteDelete(this.props.note);\r\n  };\r\n  onAddNote = () => {\r\n    this.props.onAddNote();\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"note-editor\">\r\n        <MDBCard>\r\n          <MDBCardHeader className=\"note-title\">\r\n            <input\r\n              value={this.props.note.title}\r\n              onChange={this.onTitleInputChange}\r\n              onBlur={this.onNoteSave}\r\n              type=\"text\"\r\n              style={{\r\n                width: \"auto\",\r\n                backgroundColor: \"transparent\",\r\n                color: \"#fff\",\r\n                border: \"none\"\r\n              }}\r\n            />\r\n            <MDBIcon\r\n              icon=\"trash-o\"\r\n              className=\"fa-2x\"\r\n              style={{ float: \"right\" }}\r\n              onClick={this.onNoteDelete}\r\n            />\r\n            {/* <MDBIcon\r\n              icon=\"ellipsis-v\"\r\n              className=\"fa-2x\"\r\n              style={{ float: \"right\" }}\r\n            /> */}\r\n\r\n            <MDBIcon\r\n              icon=\"save\"\r\n              className=\"fa-2x\"\r\n              style={{ float: \"right\" }}\r\n              onClick={this.onNoteSave}\r\n            />\r\n          </MDBCardHeader>\r\n          <MDBCardBody className=\"note-body\">\r\n            <MDBCardText>\r\n              <ReactQuill\r\n                value={this.props.note.body}\r\n                onChange={this.onHandleChange}\r\n              />\r\n              {/* <textarea\r\n                value={this.props.note.body}\r\n                onChange={this.onBodyInputChange}\r\n                onBlur={this.onNoteSave}\r\n                type=\"text\"\r\n                style={{\r\n                  width: \"100%\",\r\n                  backgroundColor: \"transparent\",\r\n                  border: \"none\"\r\n                }}\r\n              /> */}\r\n            </MDBCardText>\r\n            {/* <MDBBtn color=\"deep-orange\">go somewhere</MDBBtn> */}\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n        <MDBBtn id=\"btn--add\" onClick={this.onAddNote}>\r\n          <MDBIcon icon=\"plus\" />\r\n          &nbsp;&nbsp;&nbsp;Add Note\r\n        </MDBBtn>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteEditor;\r\n","import React, { Component } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport firebase from \"../fire\";\r\nimport NavBar from \"./NavBar/NavBar\";\r\nimport NoteList from \"./NoteList/NoteList\";\r\nimport NoteEditor from \"./NoteEditor/NoteEditor\";\r\n\r\n// fire base\r\n\r\nclass App extends Component {\r\n  state = {\r\n    selectedNote: {\r\n      id: null,\r\n      title: \"\",\r\n      body: \"\",\r\n      location: null,\r\n      date: null,\r\n      tags: null\r\n    },\r\n    notes: []\r\n  };\r\n\r\n  componentWillMount() {\r\n    const firebaseRef = firebase.database().ref(\"notes\");\r\n    this.getNoteData(firebaseRef);\r\n  }\r\n\r\n  getNoteData = async firebaseRef => {\r\n    const fire = await firebaseRef.once(\"value\").then(function(snapshot) {\r\n      return snapshot.val();\r\n    });\r\n\r\n    if (fire != null) {\r\n      const firebaseArr = Object.keys(fire).map(key => {\r\n        return fire[key];\r\n      });\r\n\r\n      this.setState({ notes: firebaseArr, selectedNote: firebaseArr[0] });\r\n    } else {\r\n      this.onAddNote();\r\n    }\r\n  };\r\n\r\n  onNoteSelect = note => {\r\n    this.setState({ selectedNote: note });\r\n  };\r\n\r\n  onUpdateNoteTitle = text => {\r\n    let newNote = { ...this.state.selectedNote };\r\n    newNote.title = text;\r\n    this.setState({ selectedNote: newNote });\r\n  };\r\n\r\n  onUpdateNoteBody = text => {\r\n    let newNote = { ...this.state.selectedNote };\r\n    newNote.body = text;\r\n    this.setState({ selectedNote: newNote });\r\n  };\r\n\r\n  onAddNote = () => {\r\n    let newNoteKey = firebase\r\n      .database()\r\n      .ref()\r\n      .child(\"notes\")\r\n      .push().key;\r\n    let dateObj = new Date();\r\n    let month = dateObj.getUTCMonth() + 1; //months from 1-12\r\n    let day = dateObj.getUTCDate();\r\n    let year = dateObj.getUTCFullYear();\r\n\r\n    const note = {\r\n      id: newNoteKey,\r\n      title: \"Untitled\",\r\n      body: \"\",\r\n      dateCreated: `${month}/${day}/${year}`,\r\n      lastEdited: `${month}/${day}/${year}`\r\n    };\r\n\r\n    this.setState({\r\n      selectedNote: note,\r\n      notes: [...this.state.notes, note]\r\n    });\r\n\r\n    firebase\r\n      .database()\r\n      .ref()\r\n      .child(\"notes/\" + newNoteKey)\r\n      .set(note);\r\n  };\r\n\r\n  onNoteSave = note => {\r\n    // add to firebase\r\n    let dateObj = new Date();\r\n    let month = dateObj.getUTCMonth() + 1; //months from 1-12\r\n    let day = dateObj.getUTCDate();\r\n    let year = dateObj.getUTCFullYear();\r\n\r\n    note.lastEdited = `${month}/${day}/${year}`;\r\n    let id = this.state.selectedNote.id;\r\n    let newNoteList = this.state.notes;\r\n\r\n    for (let i = 0; i < newNoteList.length; i++) {\r\n      if (note.id === newNoteList[i].id) {\r\n        newNoteList[i] = note;\r\n        this.setState({ notes: newNoteList });\r\n      }\r\n    }\r\n\r\n    firebase\r\n      .database()\r\n      .ref()\r\n      .child(\"notes/\" + id)\r\n      .set(note);\r\n  };\r\n\r\n  onNoteDelete = note => {\r\n    firebase\r\n      .database()\r\n      .ref()\r\n      .child(\"notes/\" + note.id)\r\n      .remove();\r\n\r\n    this.getNoteData(firebase.database().ref(\"notes\"));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <NavBar />\r\n        </div>\r\n        <div>\r\n          <MDBContainer fluid>\r\n            <MDBRow>\r\n              <MDBCol size=\"4\" className=\"pr-0\">\r\n                <NoteList\r\n                  notes={this.state.notes}\r\n                  onNoteSelect={this.onNoteSelect}\r\n                />\r\n              </MDBCol>\r\n\r\n              <MDBCol size=\"8\">\r\n                <NoteEditor\r\n                  note={this.state.selectedNote}\r\n                  onUpdateNoteTitle={this.onUpdateNoteTitle}\r\n                  onUpdateNoteBody={this.onUpdateNoteBody}\r\n                  onNoteSave={this.onNoteSave}\r\n                  onNoteDelete={this.onNoteDelete}\r\n                  onAddNote={this.onAddNote}\r\n                />\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}