{"version":3,"sources":["components/NavBar/logo.png","components/NoteList/logo.png","fire.js","components/NavBar/index.js","components/Note/index.js","components/NoteList/index.js","components/NoteEditor/index.js","components/BottomBar/index.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","React","Component","Note","_ref","note","onNoteSelect","console","log","react_default","a","createElement","mdbreact","onClick","style","cursor","Link","to","concat","id","className","title","lastEdited","NoteList","notes","renderedList","map","components_Note","key","fluid","hint","labelClass","containerClass","height","src","logo","alt","e","icon","NoteEditor","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onTitleInputChange","onUpdateNoteTitle","target","value","onHandleChange","body","onNoteSave","onNoteDelete","onAddNote","bind","assertThisInitialized","onChange","type","width","backgroundColor","color","border","react_quill_lib_default","BottomBar","onNoteFavorite","isFavorite","App","state","selectedNote","location","date","tags","getNoteData","_callee","firebaseRef","firebaseArr","regenerator_default","wrap","_context","prev","next","once","then","snapshot","val","sent","keys","setState","stop","text","newNote","objectSpread","onUpdateNoteBody","newNoteKey","database","ref","child","push","dateObj","Date","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear","dateCreated","toConsumableArray","set","newNoteList","i","length","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","remove","_this2","BrowserRouter","Route","exact","path","render","components_NoteList","components_NoteEditor","components_BottomBar","lib","ReactDOM","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.d0a516f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b5e08c23.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.b5e08c23.png\";","import firebase from \"firebase\";\r\n\r\nvar config = {\r\n  apiKey: \"AIzaSyAOfLcV7R56O50bTUvvtLlymu2SAqEXnxk\",\r\n  authDomain: \"notes-ecb64.firebaseapp.com\",\r\n  databaseURL: \"https://notes-ecb64.firebaseio.com\",\r\n  projectId: \"notes-ecb64\",\r\n  storageBucket: \"notes-ecb64.appspot.com\",\r\n  messagingSenderId: \"706938772405\"\r\n};\r\nvar fire = firebase.initializeApp(config);\r\nexport default fire;\r\n","import React from \"react\";\r\nimport {\r\n  MDBNavbar,\r\n  NavbarBrand,\r\n  NavbarNav,\r\n  NavbarToggler,\r\n  MDBIcon,\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBListGroup,\r\n  MDBListGroupItem\r\n} from \"mdbreact\";\r\nimport \"./NavBar.css\";\r\nimport logo from \"./logo.png\";\r\n\r\nclass Nav extends React.Component {\r\n  toggleSideNav() {\r\n    document.querySelector(\".sideNav\").classList.toggle(\"open\");\r\n  }\r\n  onNoteSave = () => {\r\n    this.props.onNoteSave(this.props.note);\r\n    this.toggleSideNav();\r\n  };\r\n  onNoteDelete = () => {\r\n    this.props.onNoteDelete(this.props.note);\r\n    this.toggleSideNav();\r\n  };\r\n  onAddNote = () => {\r\n    this.props.onAddNote();\r\n    this.toggleSideNav();\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MDBNavbar dark fixed=\"top\">\r\n          <NavbarToggler onClick={this.toggleSideNav} />\r\n          <NavbarNav left />\r\n          <NavbarNav right>\r\n            <NavbarBrand>\r\n              <img style={{ height: \"24px\" }} src={logo} alt=\"Logo\" />\r\n            </NavbarBrand>\r\n          </NavbarNav>\r\n        </MDBNavbar>\r\n        {/* <div className=\"sideNav\">\r\n          <div className=\"sideNav--banner\">\r\n            <NavbarToggler onClick={this.toggleSideNav}>\r\n              <MDBIcon className=\"fa-1x\" icon=\"arrow-left\" />\r\n            </NavbarToggler>\r\n            <NavbarNav left />\r\n\r\n            <div className=\"icon-bg\">\r\n              <MDBIcon icon=\"user-circle\" className=\"fa-5x\" />\r\n            </div>\r\n            <MDBContainer className=\"sideNav--container\">\r\n              <MDBListGroup>\r\n                <MDBListGroupItem\r\n                  className=\"sideNav--container-btn\"\r\n                  onClick={this.onAddNote}\r\n                >\r\n                  <MDBIcon className=\"fa-1x\" icon=\"plus\" />\r\n                  &nbsp;&nbsp;&nbsp;New\r\n                </MDBListGroupItem>\r\n                <MDBListGroupItem\r\n                  className=\"sideNav--container-btn\"\r\n                  onClick={this.onNoteSave}\r\n                >\r\n                  <MDBIcon className=\"fa-1x\" icon=\"save\" />\r\n                  &nbsp;&nbsp;&nbsp;Save\r\n                </MDBListGroupItem>\r\n                <MDBListGroupItem\r\n                  className=\"sideNav--container-btn\"\r\n                  onClick={this.onNoteDelete}\r\n                >\r\n                  <MDBIcon className=\"fa-1x\" icon=\"trash\" />\r\n                  &nbsp;&nbsp;&nbsp;Delete\r\n                </MDBListGroupItem>\r\n                <MDBListGroupItem className=\"sideNav--container-btn\">\r\n                  <MDBIcon className=\"fa-1x\" icon=\"user-circle\" />\r\n                  &nbsp;&nbsp;&nbsp;Sign In\r\n                </MDBListGroupItem>\r\n              </MDBListGroup>\r\n            </MDBContainer>\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport \"./Note.css\";\r\n\r\nimport { MDBListGroupItem } from \"mdbreact\";\r\nconst Note = ({ note, onNoteSelect }) => {\r\n  console.log(note);\r\n  return (\r\n    <MDBListGroupItem\r\n      onClick={() => onNoteSelect(note)}\r\n      style={{ cursor: \"pointer\" }}\r\n    >\r\n      <Link to={`/notes/${note.id}`}>\r\n        <div className=\"d-flex w-100 justify-content-between\">\r\n          <h3 className=\"mb-1\">{note.title}</h3>\r\n        </div>\r\n        <p className=\"mb-1\">Last edited: {note.lastEdited}</p>\r\n      </Link>\r\n    </MDBListGroupItem>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport \"./NoteList.css\";\r\nimport logo from \"./logo.png\";\r\n\r\nimport {\r\n  MDBContainer,\r\n  MDBListGroup,\r\n  MDBInput,\r\n  MDBBtn,\r\n  MDBIcon\r\n} from \"mdbreact\";\r\nimport Note from \"../Note/\";\r\n\r\nconst NoteList = ({ notes, onNoteSelect }) => {\r\n  const renderedList = notes.map(note => {\r\n    return <Note key={note.id} note={note} onNoteSelect={onNoteSelect} />;\r\n  });\r\n\r\n  const onSearchInputChange = e => {\r\n    let value = e.target.value;\r\n    alert(value);\r\n  };\r\n\r\n  const onAddNote = e => {\r\n    console.log(\"asdf\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"note-list\">\r\n      <MDBContainer fluid>\r\n        <MDBInput\r\n          hint=\"Search\"\r\n          id=\"note-list--search\"\r\n          labelClass=\"note-list--search_label\"\r\n          containerClass=\"note-list--search_container\"\r\n          // onChange={onSearchInputChange}\r\n        />\r\n        <img\r\n          className=\"logo\"\r\n          style={{ height: \"42px\" }}\r\n          src={logo}\r\n          alt=\"Logo\"\r\n        />\r\n        <div className=\"note-list--overflow\">\r\n          <MDBListGroup>{renderedList}</MDBListGroup>\r\n        </div>\r\n        <MDBBtn className=\"add_note_btn\" onClick={onAddNote}>\r\n          <MDBIcon icon=\"plus\" />\r\n        </MDBBtn>\r\n      </MDBContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteList;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  MDBCard,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBCardBody,\r\n  MDBCardHeader,\r\n  MDBBtn,\r\n  MDBIcon\r\n} from \"mdbreact\";\r\nimport \"./NoteEditor.css\";\r\nimport ReactQuill, { Quill, Mixin, Toolbar } from \"react-quill\";\r\n\r\nclass NoteEditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onHandleChange = this.onHandleChange.bind(this);\r\n  }\r\n\r\n  onTitleInputChange = e => {\r\n    this.props.onUpdateNoteTitle(e.target.value);\r\n  };\r\n  onHandleChange = value => {\r\n    this.props.note.body = value;\r\n  };\r\n  onNoteSave = () => {\r\n    this.props.onNoteSave(this.props.note);\r\n  };\r\n  onNoteDelete = () => {\r\n    this.props.onNoteDelete(this.props.note);\r\n  };\r\n  onAddNote = () => {\r\n    this.props.onAddNote();\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"note-editor\">\r\n        <div className=\"note-editor_nav\">\r\n          <div className=\"note-editor_button\">\r\n            <Link to=\"/\">\r\n              <MDBIcon className=\"icon-x\" icon=\"times\" />\r\n            </Link>\r\n          </div>\r\n          <input\r\n            value={this.props.note.title}\r\n            onChange={this.onTitleInputChange}\r\n            // onBlur={this.onNoteSave}\r\n            type=\"text\"\r\n            style={{\r\n              width: \"auto\",\r\n              backgroundColor: \"transparent\",\r\n              color: \"#fff\",\r\n              border: \"none\"\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <ReactQuill\r\n          value={this.props.note.body}\r\n          onChange={this.onHandleChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteEditor;\r\n","import React from \"react\";\r\nimport { MDBIcon } from \"mdbreact\";\r\n\r\nimport \"./bottomBar.css\";\r\n\r\nclass BottomBar extends React.Component {\r\n  onNoteSave = () => {\r\n    this.props.onNoteSave(this.props.note);\r\n  };\r\n  onNoteDelete = () => {\r\n    this.props.onNoteDelete(this.props.note);\r\n  };\r\n  onNoteFavorite = () => {\r\n    this.props.onNoteFavorite(this.props.note);\r\n  };\r\n  render() {\r\n    console.log(this.props.note.isFavorite);\r\n    return (\r\n      <div className=\"bottom-bar\">\r\n        <div className=\"bottom-bar_button_container\">\r\n          <div className=\"bottom-bar_button\">\r\n            <MDBIcon\r\n              className=\"icon-delete\"\r\n              icon=\"trash\"\r\n              onClick={this.onNoteDelete}\r\n            />\r\n          </div>\r\n          <div className=\"bottom-bar_button\">\r\n            <MDBIcon\r\n              className={\r\n                \"icon-favorite \" +\r\n                (this.props.note.isFavorite ? \"is-favorite\" : \"\")\r\n              }\r\n              icon=\"star\"\r\n              onClick={this.onNoteFavorite}\r\n            />\r\n          </div>\r\n          <div className=\"bottom-bar_button\">\r\n            <MDBIcon\r\n              className=\"icon-save\"\r\n              icon=\"save\"\r\n              onClick={this.onNoteSave}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BottomBar;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport firebase from \"../fire\";\r\nimport NavBar from \"./NavBar\";\r\nimport NoteList from \"./NoteList\";\r\nimport NoteEditor from \"./NoteEditor\";\r\nimport BottomBar from \"./BottomBar\";\r\n\r\n// fire base\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tselectedNote: {\r\n\t\t\tid: null,\r\n\t\t\ttitle: \"\",\r\n\t\t\tbody: \"\",\r\n\t\t\tlocation: null,\r\n\t\t\tdate: null,\r\n\t\t\ttags: null\r\n\t\t},\r\n\t\tnotes: []\r\n\t};\r\n\r\n\tcomponentWillMount() {\r\n\t\tconst firebaseRef = firebase.database().ref(\"notes\");\r\n\t\tthis.getNoteData(firebaseRef);\r\n\t}\r\n\r\n\tgetNoteData = async firebaseRef => {\r\n\t\tconst fire = await firebaseRef.once(\"value\").then(function(snapshot) {\r\n\t\t\treturn snapshot.val();\r\n\t\t});\r\n\r\n\t\tif (fire != null) {\r\n\t\t\tconst firebaseArr = Object.keys(fire).map(key => {\r\n\t\t\t\treturn fire[key];\r\n\t\t\t});\r\n\r\n\t\t\tthis.setState({ notes: firebaseArr, selectedNote: firebaseArr[0] });\r\n\t\t} else {\r\n\t\t\tthis.onAddNote();\r\n\t\t}\r\n\t};\r\n\r\n\tonNoteSelect = note => {\r\n\t\tthis.setState({ selectedNote: note });\r\n\t};\r\n\r\n\tonUpdateNoteTitle = text => {\r\n\t\tlet newNote = { ...this.state.selectedNote };\r\n\t\tnewNote.title = text;\r\n\t\tthis.setState({ selectedNote: newNote });\r\n\t};\r\n\r\n\tonUpdateNoteBody = text => {\r\n\t\tlet newNote = { ...this.state.selectedNote };\r\n\t\tnewNote.body = text;\r\n\t\tthis.setState({ selectedNote: newNote });\r\n\t};\r\n\r\n\tonAddNote = () => {\r\n\t\tlet newNoteKey = firebase\r\n\t\t\t.database()\r\n\t\t\t.ref()\r\n\t\t\t.child(\"notes\")\r\n\t\t\t.push().key;\r\n\t\tlet dateObj = new Date();\r\n\t\tlet month = dateObj.getUTCMonth() + 1; //months from 1-12\r\n\t\tlet day = dateObj.getUTCDate();\r\n\t\tlet year = dateObj.getUTCFullYear();\r\n\r\n\t\tconst note = {\r\n\t\t\tid: newNoteKey,\r\n\t\t\ttitle: \"Untitled\",\r\n\t\t\tbody: \"\",\r\n\t\t\tdateCreated: `${month}/${day}/${year}`,\r\n\t\t\tlastEdited: `${month}/${day}/${year}`\r\n\t\t};\r\n\r\n\t\tthis.setState({\r\n\t\t\tselectedNote: note,\r\n\t\t\tnotes: [...this.state.notes, note]\r\n\t\t});\r\n\r\n\t\tfirebase\r\n\t\t\t.database()\r\n\t\t\t.ref()\r\n\t\t\t.child(\"notes/\" + newNoteKey)\r\n\t\t\t.set(note);\r\n\t};\r\n\r\n\tonNoteSave = note => {\r\n\t\t// add to firebase\r\n\t\tlet dateObj = new Date();\r\n\t\tlet month = dateObj.getUTCMonth() + 1; //months from 1-12\r\n\t\tlet day = dateObj.getUTCDate();\r\n\t\tlet year = dateObj.getUTCFullYear();\r\n\r\n\t\tnote.lastEdited = `${month}/${day}/${year}`;\r\n\t\tlet id = this.state.selectedNote.id;\r\n\t\tlet newNoteList = this.state.notes;\r\n\r\n\t\tfor (let i = 0; i < newNoteList.length; i++) {\r\n\t\t\tif (note.id === newNoteList[i].id) {\r\n\t\t\t\tnewNoteList[i] = note;\r\n\t\t\t\tthis.setState({ notes: newNoteList });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfirebase\r\n\t\t\t.database()\r\n\t\t\t.ref()\r\n\t\t\t.child(\"notes/\" + id)\r\n\t\t\t.set(note);\r\n\r\n\t\ttoast.success(\"Note Saved Succesfully!\", {\r\n\t\t\tposition: \"top-right\",\r\n\t\t\tautoClose: 3000,\r\n\t\t\thideProgressBar: true,\r\n\t\t\tcloseOnClick: true,\r\n\t\t\tpauseOnHover: true,\r\n\t\t\tdraggable: true\r\n\t\t});\r\n\t};\r\n\r\n\tonNoteDelete = note => {\r\n\t\tfirebase\r\n\t\t\t.database()\r\n\t\t\t.ref()\r\n\t\t\t.child(\"notes/\" + note.id)\r\n\t\t\t.remove();\r\n\r\n\t\tthis.getNoteData(firebase.database().ref(\"notes\"));\r\n\t};\r\n\r\n\tonNoteFavorite = note => {\r\n\t\tif (note.isFavorite === true) {\r\n\t\t\tnote.isFavorite = false;\r\n\t\t\tthis.onNoteSave(note);\r\n\t\t} else {\r\n\t\t\tnote.isFavorite = true;\r\n\t\t\tthis.onNoteSave(note);\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\texact\r\n\t\t\t\t\t\t\tpath='/notes'\r\n\t\t\t\t\t\t\trender={() => (\r\n\t\t\t\t\t\t\t\t<NoteList\r\n\t\t\t\t\t\t\t\t\tnotes={this.state.notes}\r\n\t\t\t\t\t\t\t\t\tonNoteSelect={this.onNoteSelect}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\tpath={`/notes/${this.state.selectedNote.id}`}\r\n\t\t\t\t\t\t\trender={() => (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<NoteEditor\r\n\t\t\t\t\t\t\t\t\t\tnote={this.state.selectedNote}\r\n\t\t\t\t\t\t\t\t\t\tonUpdateNoteTitle={this.onUpdateNoteTitle}\r\n\t\t\t\t\t\t\t\t\t\tonUpdateNoteBody={this.onUpdateNoteBody}\r\n\t\t\t\t\t\t\t\t\t\tonNoteSave={this.onNoteSave}\r\n\t\t\t\t\t\t\t\t\t\tonNoteDelete={this.onNoteDelete}\r\n\t\t\t\t\t\t\t\t\t\tonAddNote={this.onAddNote}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<BottomBar\r\n\t\t\t\t\t\t\t\t\t\tnote={this.state.selectedNote}\r\n\t\t\t\t\t\t\t\t\t\tonNoteSave={this.onNoteSave}\r\n\t\t\t\t\t\t\t\t\t\tonNoteDelete={this.onNoteDelete}\r\n\t\t\t\t\t\t\t\t\t\tonNoteFavorite={this.onNoteFavorite}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{/* <NoteEditor\r\n              note={this.state.selectedNote}\r\n              onUpdateNoteTitle={this.onUpdateNoteTitle}\r\n              onUpdateNoteBody={this.onUpdateNoteBody}\r\n              onNoteSave={this.onNoteSave}\r\n              onNoteDelete={this.onNoteDelete}\r\n              onAddNote={this.onAddNote}\r\n            /> */}\r\n\r\n\t\t\t\t\t\t{/* <MDBContainer fluid style={{ marginTop: \"70px\" }}>\r\n            <MDBRow>\r\n              <MDBCol sm=\"12\" md=\"4\" className=\"pr-0\">\r\n                <NoteList\r\n                  notes={this.state.notes}\r\n                  onNoteSelect={this.onNoteSelect}\r\n                />\r\n              </MDBCol>\r\n\r\n              <MDBCol sm=\"12\" md=\"8\">\r\n                <NoteEditor\r\n                  note={this.state.selectedNote}\r\n                  onUpdateNoteTitle={this.onUpdateNoteTitle}\r\n                  onUpdateNoteBody={this.onUpdateNoteBody}\r\n                  onNoteSave={this.onNoteSave}\r\n                  onNoteDelete={this.onNoteDelete}\r\n                  onAddNote={this.onAddNote}\r\n                />\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Router>\r\n\r\n\t\t\t\t<ToastContainer />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}